// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

// @@protoc_insertion_point(imports)

@class AVIMAckCommand;
@class AVIMAckCommandBuilder;
@class AVIMConvCommand;
@class AVIMConvCommandBuilder;
@class AVIMDataCommand;
@class AVIMDataCommandBuilder;
@class AVIMDirectCommand;
@class AVIMDirectCommandBuilder;
@class AVIMErrorCommand;
@class AVIMErrorCommandBuilder;
@class AVIMGenericCommand;
@class AVIMGenericCommandBuilder;
@class AVIMJsonObjectMessage;
@class AVIMJsonObjectMessageBuilder;
@class AVIMLogItem;
@class AVIMLogItemBuilder;
@class AVIMLogsCommand;
@class AVIMLogsCommandBuilder;
@class AVIMMaxReadTuple;
@class AVIMMaxReadTupleBuilder;
@class AVIMPatchCommand;
@class AVIMPatchCommandBuilder;
@class AVIMPatchItem;
@class AVIMPatchItemBuilder;
@class AVIMPresenceCommand;
@class AVIMPresenceCommandBuilder;
@class AVIMRcpCommand;
@class AVIMRcpCommandBuilder;
@class AVIMReadCommand;
@class AVIMReadCommandBuilder;
@class AVIMReadTuple;
@class AVIMReadTupleBuilder;
@class AVIMReportCommand;
@class AVIMReportCommandBuilder;
@class AVIMRoomCommand;
@class AVIMRoomCommandBuilder;
@class AVIMSessionCommand;
@class AVIMSessionCommandBuilder;
@class AVIMUnreadCommand;
@class AVIMUnreadCommandBuilder;
@class AVIMUnreadTuple;
@class AVIMUnreadTupleBuilder;
@class ObjectiveCFileOptions;
@class ObjectiveCFileOptionsBuilder;
@class PBDescriptorProto;
@class PBDescriptorProtoBuilder;
@class PBDescriptorProtoExtensionRange;
@class PBDescriptorProtoExtensionRangeBuilder;
@class PBEnumDescriptorProto;
@class PBEnumDescriptorProtoBuilder;
@class PBEnumOptions;
@class PBEnumOptionsBuilder;
@class PBEnumValueDescriptorProto;
@class PBEnumValueDescriptorProtoBuilder;
@class PBEnumValueOptions;
@class PBEnumValueOptionsBuilder;
@class PBFieldDescriptorProto;
@class PBFieldDescriptorProtoBuilder;
@class PBFieldOptions;
@class PBFieldOptionsBuilder;
@class PBFileDescriptorProto;
@class PBFileDescriptorProtoBuilder;
@class PBFileDescriptorSet;
@class PBFileDescriptorSetBuilder;
@class PBFileOptions;
@class PBFileOptionsBuilder;
@class PBMessageOptions;
@class PBMessageOptionsBuilder;
@class PBMethodDescriptorProto;
@class PBMethodDescriptorProtoBuilder;
@class PBMethodOptions;
@class PBMethodOptionsBuilder;
@class PBOneofDescriptorProto;
@class PBOneofDescriptorProtoBuilder;
@class PBServiceDescriptorProto;
@class PBServiceDescriptorProtoBuilder;
@class PBServiceOptions;
@class PBServiceOptionsBuilder;
@class PBSourceCodeInfo;
@class PBSourceCodeInfoBuilder;
@class PBSourceCodeInfoLocation;
@class PBSourceCodeInfoLocationBuilder;
@class PBUninterpretedOption;
@class PBUninterpretedOptionBuilder;
@class PBUninterpretedOptionNamePart;
@class PBUninterpretedOptionNamePartBuilder;


typedef NS_ENUM(SInt32, AVIMCommandType) {
  AVIMCommandTypeSession = 0,
  AVIMCommandTypeConv = 1,
  AVIMCommandTypeDirect = 2,
  AVIMCommandTypeAck = 3,
  AVIMCommandTypeRcp = 4,
  AVIMCommandTypeUnread = 5,
  AVIMCommandTypeLogs = 6,
  AVIMCommandTypeError = 7,
  AVIMCommandTypeLogin = 8,
  AVIMCommandTypeData = 9,
  AVIMCommandTypeRoom = 10,
  AVIMCommandTypeRead = 11,
  AVIMCommandTypePresence = 12,
  AVIMCommandTypeReport = 13,
  AVIMCommandTypeEcho = 14,
  AVIMCommandTypeLoggedin = 15,
  AVIMCommandTypeLogout = 16,
  AVIMCommandTypeLoggedout = 17,
  AVIMCommandTypePatch = 18,
};

BOOL AVIMCommandTypeIsValidValue(AVIMCommandType value);
NSString *NSStringFromAVIMCommandType(AVIMCommandType value);

typedef NS_ENUM(SInt32, AVIMOpType) {
  AVIMOpTypeOpen = 1,
  AVIMOpTypeAdd = 2,
  AVIMOpTypeRemove = 3,
  AVIMOpTypeClose = 4,
  AVIMOpTypeOpened = 5,
  AVIMOpTypeClosed = 6,
  AVIMOpTypeQuery = 7,
  AVIMOpTypeQueryResult = 8,
  AVIMOpTypeConflict = 9,
  AVIMOpTypeAdded = 10,
  AVIMOpTypeRemoved = 11,
  AVIMOpTypeStart = 30,
  AVIMOpTypeStarted = 31,
  AVIMOpTypeJoined = 32,
  AVIMOpTypeMembersJoined = 33,
  AVIMOpTypeLeft = 39,
  AVIMOpTypeMembersLeft = 40,
  AVIMOpTypeResults = 42,
  AVIMOpTypeCount = 43,
  AVIMOpTypeResult = 44,
  AVIMOpTypeUpdate = 45,
  AVIMOpTypeUpdated = 46,
  AVIMOpTypeMute = 47,
  AVIMOpTypeUnmute = 48,
  AVIMOpTypeStatus = 49,
  AVIMOpTypeMembers = 50,
  AVIMOpTypeMaxRead = 51,
  AVIMOpTypeIsMember = 52,
  AVIMOpTypeJoin = 80,
  AVIMOpTypeInvite = 81,
  AVIMOpTypeLeave = 82,
  AVIMOpTypeKick = 83,
  AVIMOpTypeReject = 84,
  AVIMOpTypeInvited = 85,
  AVIMOpTypeKicked = 86,
  AVIMOpTypeUpload = 100,
  AVIMOpTypeUploaded = 101,
  AVIMOpTypeModify = 150,
  AVIMOpTypeModified = 151,
};

BOOL AVIMOpTypeIsValidValue(AVIMOpType value);
NSString *NSStringFromAVIMOpType(AVIMOpType value);

typedef NS_ENUM(SInt32, AVIMStatusType) {
  AVIMStatusTypeOn = 1,
  AVIMStatusTypeOff = 2,
};

BOOL AVIMStatusTypeIsValidValue(AVIMStatusType value);
NSString *NSStringFromAVIMStatusType(AVIMStatusType value);

typedef NS_ENUM(SInt32, AVIMLogsCommand_QueryDirection) {
  AVIMLogsCommand_QueryDirectionOld = 1,
  AVIMLogsCommand_QueryDirectionNew = 2,
};

BOOL AVIMLogsCommand_QueryDirectionIsValidValue(AVIMLogsCommand_QueryDirection value);
NSString *NSStringFromAVIMLogsCommand_QueryDirection(AVIMLogsCommand_QueryDirection value);


@interface AVIMMessagesProtoOrigRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define JsonObjectMessage_data @"data"
@interface AVIMJsonObjectMessage : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasData_:1;
  NSString* data;
}
- (BOOL) hasData;
@property (readonly, strong) NSString* data;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMJsonObjectMessageBuilder*) builder;
+ (AVIMJsonObjectMessageBuilder*) builder;
+ (AVIMJsonObjectMessageBuilder*) builderWithPrototype:(AVIMJsonObjectMessage*) prototype;
- (AVIMJsonObjectMessageBuilder*) toBuilder;

+ (AVIMJsonObjectMessage*) parseFromData:(NSData*) data;
+ (AVIMJsonObjectMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMJsonObjectMessage*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMJsonObjectMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMJsonObjectMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMJsonObjectMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMJsonObjectMessageBuilder : PBGeneratedMessageBuilder {
@private
  AVIMJsonObjectMessage* resultJsonObjectMessage;
}

- (AVIMJsonObjectMessage*) defaultInstance;

- (AVIMJsonObjectMessageBuilder*) clear;
- (AVIMJsonObjectMessageBuilder*) clone;

- (AVIMJsonObjectMessage*) build;
- (AVIMJsonObjectMessage*) buildPartial;

- (AVIMJsonObjectMessageBuilder*) mergeFrom:(AVIMJsonObjectMessage*) other;
- (AVIMJsonObjectMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMJsonObjectMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasData;
- (NSString*) data;
- (AVIMJsonObjectMessageBuilder*) setData:(NSString*) value;
- (AVIMJsonObjectMessageBuilder*) clearData;
@end

#define UnreadTuple_cid @"cid"
#define UnreadTuple_unread @"unread"
#define UnreadTuple_mid @"mid"
#define UnreadTuple_timestamp @"timestamp"
#define UnreadTuple_from @"pb_from"
#define UnreadTuple_data @"data"
#define UnreadTuple_patchTimestamp @"patchTimestamp"
@interface AVIMUnreadTuple : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTimestamp_:1;
  BOOL hasPatchTimestamp_:1;
  BOOL hasUnread_:1;
  BOOL hasCid_:1;
  BOOL hasMid_:1;
  BOOL hasFrom_:1;
  BOOL hasData_:1;
  SInt64 timestamp;
  SInt64 patchTimestamp;
  SInt32 unread;
  NSString* cid;
  NSString* mid;
  NSString* pb_from;
  NSString* data;
}
- (BOOL) hasCid;
- (BOOL) hasUnread;
- (BOOL) hasMid;
- (BOOL) hasTimestamp;
- (BOOL) hasFrom;
- (BOOL) hasData;
- (BOOL) hasPatchTimestamp;
@property (readonly, strong) NSString* cid;
@property (readonly) SInt32 unread;
@property (readonly, strong) NSString* mid;
@property (readonly) SInt64 timestamp;
@property (readonly, strong) NSString* pb_from;
@property (readonly, strong) NSString* data;
@property (readonly) SInt64 patchTimestamp;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMUnreadTupleBuilder*) builder;
+ (AVIMUnreadTupleBuilder*) builder;
+ (AVIMUnreadTupleBuilder*) builderWithPrototype:(AVIMUnreadTuple*) prototype;
- (AVIMUnreadTupleBuilder*) toBuilder;

+ (AVIMUnreadTuple*) parseFromData:(NSData*) data;
+ (AVIMUnreadTuple*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMUnreadTuple*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMUnreadTuple*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMUnreadTuple*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMUnreadTuple*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMUnreadTupleBuilder : PBGeneratedMessageBuilder {
@private
  AVIMUnreadTuple* resultUnreadTuple;
}

- (AVIMUnreadTuple*) defaultInstance;

- (AVIMUnreadTupleBuilder*) clear;
- (AVIMUnreadTupleBuilder*) clone;

- (AVIMUnreadTuple*) build;
- (AVIMUnreadTuple*) buildPartial;

- (AVIMUnreadTupleBuilder*) mergeFrom:(AVIMUnreadTuple*) other;
- (AVIMUnreadTupleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMUnreadTupleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCid;
- (NSString*) cid;
- (AVIMUnreadTupleBuilder*) setCid:(NSString*) value;
- (AVIMUnreadTupleBuilder*) clearCid;

- (BOOL) hasUnread;
- (SInt32) unread;
- (AVIMUnreadTupleBuilder*) setUnread:(SInt32) value;
- (AVIMUnreadTupleBuilder*) clearUnread;

- (BOOL) hasMid;
- (NSString*) mid;
- (AVIMUnreadTupleBuilder*) setMid:(NSString*) value;
- (AVIMUnreadTupleBuilder*) clearMid;

- (BOOL) hasTimestamp;
- (SInt64) timestamp;
- (AVIMUnreadTupleBuilder*) setTimestamp:(SInt64) value;
- (AVIMUnreadTupleBuilder*) clearTimestamp;

- (BOOL) hasFrom;
- (NSString*) pb_from;
- (AVIMUnreadTupleBuilder*) setFrom:(NSString*) value;
- (AVIMUnreadTupleBuilder*) clearFrom;

- (BOOL) hasData;
- (NSString*) data;
- (AVIMUnreadTupleBuilder*) setData:(NSString*) value;
- (AVIMUnreadTupleBuilder*) clearData;

- (BOOL) hasPatchTimestamp;
- (SInt64) patchTimestamp;
- (AVIMUnreadTupleBuilder*) setPatchTimestamp:(SInt64) value;
- (AVIMUnreadTupleBuilder*) clearPatchTimestamp;
@end

#define LogItem_from @"pb_from"
#define LogItem_data @"data"
#define LogItem_timestamp @"timestamp"
#define LogItem_msgId @"msgId"
#define LogItem_ackAt @"ackAt"
#define LogItem_readAt @"readAt"
#define LogItem_patchTimestamp @"patchTimestamp"
@interface AVIMLogItem : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTimestamp_:1;
  BOOL hasAckAt_:1;
  BOOL hasReadAt_:1;
  BOOL hasPatchTimestamp_:1;
  BOOL hasFrom_:1;
  BOOL hasData_:1;
  BOOL hasMsgId_:1;
  SInt64 timestamp;
  SInt64 ackAt;
  SInt64 readAt;
  SInt64 patchTimestamp;
  NSString* pb_from;
  NSString* data;
  NSString* msgId;
}
- (BOOL) hasFrom;
- (BOOL) hasData;
- (BOOL) hasTimestamp;
- (BOOL) hasMsgId;
- (BOOL) hasAckAt;
- (BOOL) hasReadAt;
- (BOOL) hasPatchTimestamp;
@property (readonly, strong) NSString* pb_from;
@property (readonly, strong) NSString* data;
@property (readonly) SInt64 timestamp;
@property (readonly, strong) NSString* msgId;
@property (readonly) SInt64 ackAt;
@property (readonly) SInt64 readAt;
@property (readonly) SInt64 patchTimestamp;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMLogItemBuilder*) builder;
+ (AVIMLogItemBuilder*) builder;
+ (AVIMLogItemBuilder*) builderWithPrototype:(AVIMLogItem*) prototype;
- (AVIMLogItemBuilder*) toBuilder;

+ (AVIMLogItem*) parseFromData:(NSData*) data;
+ (AVIMLogItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMLogItem*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMLogItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMLogItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMLogItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMLogItemBuilder : PBGeneratedMessageBuilder {
@private
  AVIMLogItem* resultLogItem;
}

- (AVIMLogItem*) defaultInstance;

- (AVIMLogItemBuilder*) clear;
- (AVIMLogItemBuilder*) clone;

- (AVIMLogItem*) build;
- (AVIMLogItem*) buildPartial;

- (AVIMLogItemBuilder*) mergeFrom:(AVIMLogItem*) other;
- (AVIMLogItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMLogItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasFrom;
- (NSString*) pb_from;
- (AVIMLogItemBuilder*) setFrom:(NSString*) value;
- (AVIMLogItemBuilder*) clearFrom;

- (BOOL) hasData;
- (NSString*) data;
- (AVIMLogItemBuilder*) setData:(NSString*) value;
- (AVIMLogItemBuilder*) clearData;

- (BOOL) hasTimestamp;
- (SInt64) timestamp;
- (AVIMLogItemBuilder*) setTimestamp:(SInt64) value;
- (AVIMLogItemBuilder*) clearTimestamp;

- (BOOL) hasMsgId;
- (NSString*) msgId;
- (AVIMLogItemBuilder*) setMsgId:(NSString*) value;
- (AVIMLogItemBuilder*) clearMsgId;

- (BOOL) hasAckAt;
- (SInt64) ackAt;
- (AVIMLogItemBuilder*) setAckAt:(SInt64) value;
- (AVIMLogItemBuilder*) clearAckAt;

- (BOOL) hasReadAt;
- (SInt64) readAt;
- (AVIMLogItemBuilder*) setReadAt:(SInt64) value;
- (AVIMLogItemBuilder*) clearReadAt;

- (BOOL) hasPatchTimestamp;
- (SInt64) patchTimestamp;
- (AVIMLogItemBuilder*) setPatchTimestamp:(SInt64) value;
- (AVIMLogItemBuilder*) clearPatchTimestamp;
@end

#define DataCommand_ids @"ids"
#define DataCommand_msg @"msg"
#define DataCommand_offline @"offline"
@interface AVIMDataCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOffline_:1;
  BOOL offline_:1;
  NSMutableArray * idsArray;
  NSMutableArray * msgArray;
}
- (BOOL) hasOffline;
@property (readonly, strong) NSArray * ids;
@property (readonly, strong) NSArray * msg;
- (BOOL) offline;
- (NSString*)idsAtIndex:(NSUInteger)index;
- (AVIMJsonObjectMessage*)msgAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMDataCommandBuilder*) builder;
+ (AVIMDataCommandBuilder*) builder;
+ (AVIMDataCommandBuilder*) builderWithPrototype:(AVIMDataCommand*) prototype;
- (AVIMDataCommandBuilder*) toBuilder;

+ (AVIMDataCommand*) parseFromData:(NSData*) data;
+ (AVIMDataCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMDataCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMDataCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMDataCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMDataCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMDataCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMDataCommand* resultDataCommand;
}

- (AVIMDataCommand*) defaultInstance;

- (AVIMDataCommandBuilder*) clear;
- (AVIMDataCommandBuilder*) clone;

- (AVIMDataCommand*) build;
- (AVIMDataCommand*) buildPartial;

- (AVIMDataCommandBuilder*) mergeFrom:(AVIMDataCommand*) other;
- (AVIMDataCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMDataCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)ids;
- (NSString*)idsAtIndex:(NSUInteger)index;
- (AVIMDataCommandBuilder *)addIds:(NSString*)value;
- (AVIMDataCommandBuilder *)setIdsArray:(NSArray *)array;
- (AVIMDataCommandBuilder *)clearIds;

- (NSMutableArray *)msg;
- (AVIMJsonObjectMessage*)msgAtIndex:(NSUInteger)index;
- (AVIMDataCommandBuilder *)addMsg:(AVIMJsonObjectMessage*)value;
- (AVIMDataCommandBuilder *)setMsgArray:(NSArray *)array;
- (AVIMDataCommandBuilder *)clearMsg;

- (BOOL) hasOffline;
- (BOOL) offline;
- (AVIMDataCommandBuilder*) setOffline:(BOOL) value;
- (AVIMDataCommandBuilder*) clearOffline;
@end

#define SessionCommand_t @"t"
#define SessionCommand_n @"n"
#define SessionCommand_s @"s"
#define SessionCommand_ua @"ua"
#define SessionCommand_r @"r"
#define SessionCommand_tag @"tag"
#define SessionCommand_deviceId @"deviceId"
#define SessionCommand_sessionPeerIds @"sessionPeerIds"
#define SessionCommand_onlineSessionPeerIds @"onlineSessionPeerIds"
#define SessionCommand_st @"st"
#define SessionCommand_stTtl @"stTtl"
#define SessionCommand_code @"code"
#define SessionCommand_reason @"reason"
#define SessionCommand_deviceToken @"deviceToken"
#define SessionCommand_sp @"sp"
#define SessionCommand_detail @"detail"
#define SessionCommand_lastUnreadNotifTime @"lastUnreadNotifTime"
#define SessionCommand_lastPatchTime @"lastPatchTime"
#define SessionCommand_configBitmap @"configBitmap"
@interface AVIMSessionCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasR_:1;
  BOOL hasSp_:1;
  BOOL hasDetail_:1;
  BOOL hasT_:1;
  BOOL hasLastUnreadNotifTime_:1;
  BOOL hasLastPatchTime_:1;
  BOOL hasConfigBitmap_:1;
  BOOL hasStTtl_:1;
  BOOL hasCode_:1;
  BOOL hasN_:1;
  BOOL hasS_:1;
  BOOL hasUa_:1;
  BOOL hasTag_:1;
  BOOL hasDeviceId_:1;
  BOOL hasSt_:1;
  BOOL hasReason_:1;
  BOOL hasDeviceToken_:1;
  BOOL r_:1;
  BOOL sp_:1;
  BOOL detail_:1;
  SInt64 t;
  SInt64 lastUnreadNotifTime;
  SInt64 lastPatchTime;
  SInt64 configBitmap;
  SInt32 stTtl;
  SInt32 code;
  NSString* n;
  NSString* s;
  NSString* ua;
  NSString* tag;
  NSString* deviceId;
  NSString* st;
  NSString* reason;
  NSString* deviceToken;
  NSMutableArray * sessionPeerIdsArray;
  NSMutableArray * onlineSessionPeerIdsArray;
}
- (BOOL) hasT;
- (BOOL) hasN;
- (BOOL) hasS;
- (BOOL) hasUa;
- (BOOL) hasR;
- (BOOL) hasTag;
- (BOOL) hasDeviceId;
- (BOOL) hasSt;
- (BOOL) hasStTtl;
- (BOOL) hasCode;
- (BOOL) hasReason;
- (BOOL) hasDeviceToken;
- (BOOL) hasSp;
- (BOOL) hasDetail;
- (BOOL) hasLastUnreadNotifTime;
- (BOOL) hasLastPatchTime;
- (BOOL) hasConfigBitmap;
@property (readonly) SInt64 t;
@property (readonly, strong) NSString* n;
@property (readonly, strong) NSString* s;
@property (readonly, strong) NSString* ua;
- (BOOL) r;
@property (readonly, strong) NSString* tag;
@property (readonly, strong) NSString* deviceId;
@property (readonly, strong) NSArray * sessionPeerIds;
@property (readonly, strong) NSArray * onlineSessionPeerIds;
@property (readonly, strong) NSString* st;
@property (readonly) SInt32 stTtl;
@property (readonly) SInt32 code;
@property (readonly, strong) NSString* reason;
@property (readonly, strong) NSString* deviceToken;
- (BOOL) sp;
- (BOOL) detail;
@property (readonly) SInt64 lastUnreadNotifTime;
@property (readonly) SInt64 lastPatchTime;
@property (readonly) SInt64 configBitmap;
- (NSString*)sessionPeerIdsAtIndex:(NSUInteger)index;
- (NSString*)onlineSessionPeerIdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMSessionCommandBuilder*) builder;
+ (AVIMSessionCommandBuilder*) builder;
+ (AVIMSessionCommandBuilder*) builderWithPrototype:(AVIMSessionCommand*) prototype;
- (AVIMSessionCommandBuilder*) toBuilder;

+ (AVIMSessionCommand*) parseFromData:(NSData*) data;
+ (AVIMSessionCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMSessionCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMSessionCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMSessionCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMSessionCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMSessionCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMSessionCommand* resultSessionCommand;
}

- (AVIMSessionCommand*) defaultInstance;

- (AVIMSessionCommandBuilder*) clear;
- (AVIMSessionCommandBuilder*) clone;

- (AVIMSessionCommand*) build;
- (AVIMSessionCommand*) buildPartial;

- (AVIMSessionCommandBuilder*) mergeFrom:(AVIMSessionCommand*) other;
- (AVIMSessionCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMSessionCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasT;
- (SInt64) t;
- (AVIMSessionCommandBuilder*) setT:(SInt64) value;
- (AVIMSessionCommandBuilder*) clearT;

- (BOOL) hasN;
- (NSString*) n;
- (AVIMSessionCommandBuilder*) setN:(NSString*) value;
- (AVIMSessionCommandBuilder*) clearN;

- (BOOL) hasS;
- (NSString*) s;
- (AVIMSessionCommandBuilder*) setS:(NSString*) value;
- (AVIMSessionCommandBuilder*) clearS;

- (BOOL) hasUa;
- (NSString*) ua;
- (AVIMSessionCommandBuilder*) setUa:(NSString*) value;
- (AVIMSessionCommandBuilder*) clearUa;

- (BOOL) hasR;
- (BOOL) r;
- (AVIMSessionCommandBuilder*) setR:(BOOL) value;
- (AVIMSessionCommandBuilder*) clearR;

- (BOOL) hasTag;
- (NSString*) tag;
- (AVIMSessionCommandBuilder*) setTag:(NSString*) value;
- (AVIMSessionCommandBuilder*) clearTag;

- (BOOL) hasDeviceId;
- (NSString*) deviceId;
- (AVIMSessionCommandBuilder*) setDeviceId:(NSString*) value;
- (AVIMSessionCommandBuilder*) clearDeviceId;

- (NSMutableArray *)sessionPeerIds;
- (NSString*)sessionPeerIdsAtIndex:(NSUInteger)index;
- (AVIMSessionCommandBuilder *)addSessionPeerIds:(NSString*)value;
- (AVIMSessionCommandBuilder *)setSessionPeerIdsArray:(NSArray *)array;
- (AVIMSessionCommandBuilder *)clearSessionPeerIds;

- (NSMutableArray *)onlineSessionPeerIds;
- (NSString*)onlineSessionPeerIdsAtIndex:(NSUInteger)index;
- (AVIMSessionCommandBuilder *)addOnlineSessionPeerIds:(NSString*)value;
- (AVIMSessionCommandBuilder *)setOnlineSessionPeerIdsArray:(NSArray *)array;
- (AVIMSessionCommandBuilder *)clearOnlineSessionPeerIds;

- (BOOL) hasSt;
- (NSString*) st;
- (AVIMSessionCommandBuilder*) setSt:(NSString*) value;
- (AVIMSessionCommandBuilder*) clearSt;

- (BOOL) hasStTtl;
- (SInt32) stTtl;
- (AVIMSessionCommandBuilder*) setStTtl:(SInt32) value;
- (AVIMSessionCommandBuilder*) clearStTtl;

- (BOOL) hasCode;
- (SInt32) code;
- (AVIMSessionCommandBuilder*) setCode:(SInt32) value;
- (AVIMSessionCommandBuilder*) clearCode;

- (BOOL) hasReason;
- (NSString*) reason;
- (AVIMSessionCommandBuilder*) setReason:(NSString*) value;
- (AVIMSessionCommandBuilder*) clearReason;

- (BOOL) hasDeviceToken;
- (NSString*) deviceToken;
- (AVIMSessionCommandBuilder*) setDeviceToken:(NSString*) value;
- (AVIMSessionCommandBuilder*) clearDeviceToken;

- (BOOL) hasSp;
- (BOOL) sp;
- (AVIMSessionCommandBuilder*) setSp:(BOOL) value;
- (AVIMSessionCommandBuilder*) clearSp;

- (BOOL) hasDetail;
- (BOOL) detail;
- (AVIMSessionCommandBuilder*) setDetail:(BOOL) value;
- (AVIMSessionCommandBuilder*) clearDetail;

- (BOOL) hasLastUnreadNotifTime;
- (SInt64) lastUnreadNotifTime;
- (AVIMSessionCommandBuilder*) setLastUnreadNotifTime:(SInt64) value;
- (AVIMSessionCommandBuilder*) clearLastUnreadNotifTime;

- (BOOL) hasLastPatchTime;
- (SInt64) lastPatchTime;
- (AVIMSessionCommandBuilder*) setLastPatchTime:(SInt64) value;
- (AVIMSessionCommandBuilder*) clearLastPatchTime;

- (BOOL) hasConfigBitmap;
- (SInt64) configBitmap;
- (AVIMSessionCommandBuilder*) setConfigBitmap:(SInt64) value;
- (AVIMSessionCommandBuilder*) clearConfigBitmap;
@end

#define ErrorCommand_code @"code"
#define ErrorCommand_reason @"reason"
#define ErrorCommand_appCode @"appCode"
#define ErrorCommand_detail @"detail"
@interface AVIMErrorCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCode_:1;
  BOOL hasAppCode_:1;
  BOOL hasReason_:1;
  BOOL hasDetail_:1;
  SInt32 code;
  SInt32 appCode;
  NSString* reason;
  NSString* detail;
}
- (BOOL) hasCode;
- (BOOL) hasReason;
- (BOOL) hasAppCode;
- (BOOL) hasDetail;
@property (readonly) SInt32 code;
@property (readonly, strong) NSString* reason;
@property (readonly) SInt32 appCode;
@property (readonly, strong) NSString* detail;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMErrorCommandBuilder*) builder;
+ (AVIMErrorCommandBuilder*) builder;
+ (AVIMErrorCommandBuilder*) builderWithPrototype:(AVIMErrorCommand*) prototype;
- (AVIMErrorCommandBuilder*) toBuilder;

+ (AVIMErrorCommand*) parseFromData:(NSData*) data;
+ (AVIMErrorCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMErrorCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMErrorCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMErrorCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMErrorCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMErrorCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMErrorCommand* resultErrorCommand;
}

- (AVIMErrorCommand*) defaultInstance;

- (AVIMErrorCommandBuilder*) clear;
- (AVIMErrorCommandBuilder*) clone;

- (AVIMErrorCommand*) build;
- (AVIMErrorCommand*) buildPartial;

- (AVIMErrorCommandBuilder*) mergeFrom:(AVIMErrorCommand*) other;
- (AVIMErrorCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMErrorCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (SInt32) code;
- (AVIMErrorCommandBuilder*) setCode:(SInt32) value;
- (AVIMErrorCommandBuilder*) clearCode;

- (BOOL) hasReason;
- (NSString*) reason;
- (AVIMErrorCommandBuilder*) setReason:(NSString*) value;
- (AVIMErrorCommandBuilder*) clearReason;

- (BOOL) hasAppCode;
- (SInt32) appCode;
- (AVIMErrorCommandBuilder*) setAppCode:(SInt32) value;
- (AVIMErrorCommandBuilder*) clearAppCode;

- (BOOL) hasDetail;
- (NSString*) detail;
- (AVIMErrorCommandBuilder*) setDetail:(NSString*) value;
- (AVIMErrorCommandBuilder*) clearDetail;
@end

#define DirectCommand_msg @"msg"
#define DirectCommand_uid @"uid"
#define DirectCommand_fromPeerId @"fromPeerId"
#define DirectCommand_timestamp @"timestamp"
#define DirectCommand_offline @"offline"
#define DirectCommand_hasMore @"hasMore"
#define DirectCommand_toPeerIds @"toPeerIds"
#define DirectCommand_r @"r"
#define DirectCommand_cid @"cid"
#define DirectCommand_id @"id"
#define DirectCommand_transient @"transient"
#define DirectCommand_dt @"dt"
#define DirectCommand_roomId @"roomId"
#define DirectCommand_pushData @"pushData"
#define DirectCommand_will @"will"
#define DirectCommand_patchTimestamp @"patchTimestamp"
#define DirectCommand_binaryMsg @"binaryMsg"
@interface AVIMDirectCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasOffline_:1;
  BOOL hasHasMore_:1;
  BOOL hasR_:1;
  BOOL hasTransient_:1;
  BOOL hasWill_:1;
  BOOL hasTimestamp_:1;
  BOOL hasPatchTimestamp_:1;
  BOOL hasMsg_:1;
  BOOL hasUid_:1;
  BOOL hasFromPeerId_:1;
  BOOL hasCid_:1;
  BOOL hasId_:1;
  BOOL hasDt_:1;
  BOOL hasRoomId_:1;
  BOOL hasPushData_:1;
  BOOL hasBinaryMsg_:1;
  BOOL offline_:1;
  BOOL hasMore_:1;
  BOOL r_:1;
  BOOL transient_:1;
  BOOL will_:1;
  SInt64 timestamp;
  SInt64 patchTimestamp;
  NSString* msg;
  NSString* uid;
  NSString* fromPeerId;
  NSString* cid;
  NSString* id;
  NSString* dt;
  NSString* roomId;
  NSString* pushData;
  NSData* binaryMsg;
  NSMutableArray * toPeerIdsArray;
}
- (BOOL) hasMsg;
- (BOOL) hasUid;
- (BOOL) hasFromPeerId;
- (BOOL) hasTimestamp;
- (BOOL) hasOffline;
- (BOOL) hasHasMore;
- (BOOL) hasR;
- (BOOL) hasCid;
- (BOOL) hasId;
- (BOOL) hasTransient;
- (BOOL) hasDt;
- (BOOL) hasRoomId;
- (BOOL) hasPushData;
- (BOOL) hasWill;
- (BOOL) hasPatchTimestamp;
- (BOOL) hasBinaryMsg;
@property (readonly, strong) NSString* msg;
@property (readonly, strong) NSString* uid;
@property (readonly, strong) NSString* fromPeerId;
@property (readonly) SInt64 timestamp;
- (BOOL) offline;
- (BOOL) hasMore;
@property (readonly, strong) NSArray * toPeerIds;
- (BOOL) r;
@property (readonly, strong) NSString* cid;
@property (readonly, strong) NSString* id;
- (BOOL) transient;
@property (readonly, strong) NSString* dt;
@property (readonly, strong) NSString* roomId;
@property (readonly, strong) NSString* pushData;
- (BOOL) will;
@property (readonly) SInt64 patchTimestamp;
@property (readonly, strong) NSData* binaryMsg;
- (NSString*)toPeerIdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMDirectCommandBuilder*) builder;
+ (AVIMDirectCommandBuilder*) builder;
+ (AVIMDirectCommandBuilder*) builderWithPrototype:(AVIMDirectCommand*) prototype;
- (AVIMDirectCommandBuilder*) toBuilder;

+ (AVIMDirectCommand*) parseFromData:(NSData*) data;
+ (AVIMDirectCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMDirectCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMDirectCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMDirectCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMDirectCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMDirectCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMDirectCommand* resultDirectCommand;
}

- (AVIMDirectCommand*) defaultInstance;

- (AVIMDirectCommandBuilder*) clear;
- (AVIMDirectCommandBuilder*) clone;

- (AVIMDirectCommand*) build;
- (AVIMDirectCommand*) buildPartial;

- (AVIMDirectCommandBuilder*) mergeFrom:(AVIMDirectCommand*) other;
- (AVIMDirectCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMDirectCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasMsg;
- (NSString*) msg;
- (AVIMDirectCommandBuilder*) setMsg:(NSString*) value;
- (AVIMDirectCommandBuilder*) clearMsg;

- (BOOL) hasUid;
- (NSString*) uid;
- (AVIMDirectCommandBuilder*) setUid:(NSString*) value;
- (AVIMDirectCommandBuilder*) clearUid;

- (BOOL) hasFromPeerId;
- (NSString*) fromPeerId;
- (AVIMDirectCommandBuilder*) setFromPeerId:(NSString*) value;
- (AVIMDirectCommandBuilder*) clearFromPeerId;

- (BOOL) hasTimestamp;
- (SInt64) timestamp;
- (AVIMDirectCommandBuilder*) setTimestamp:(SInt64) value;
- (AVIMDirectCommandBuilder*) clearTimestamp;

- (BOOL) hasOffline;
- (BOOL) offline;
- (AVIMDirectCommandBuilder*) setOffline:(BOOL) value;
- (AVIMDirectCommandBuilder*) clearOffline;

- (BOOL) hasHasMore;
- (BOOL) hasMore;
- (AVIMDirectCommandBuilder*) setHasMore:(BOOL) value;
- (AVIMDirectCommandBuilder*) clearHasMore;

- (NSMutableArray *)toPeerIds;
- (NSString*)toPeerIdsAtIndex:(NSUInteger)index;
- (AVIMDirectCommandBuilder *)addToPeerIds:(NSString*)value;
- (AVIMDirectCommandBuilder *)setToPeerIdsArray:(NSArray *)array;
- (AVIMDirectCommandBuilder *)clearToPeerIds;

- (BOOL) hasR;
- (BOOL) r;
- (AVIMDirectCommandBuilder*) setR:(BOOL) value;
- (AVIMDirectCommandBuilder*) clearR;

- (BOOL) hasCid;
- (NSString*) cid;
- (AVIMDirectCommandBuilder*) setCid:(NSString*) value;
- (AVIMDirectCommandBuilder*) clearCid;

- (BOOL) hasId;
- (NSString*) id;
- (AVIMDirectCommandBuilder*) setId:(NSString*) value;
- (AVIMDirectCommandBuilder*) clearId;

- (BOOL) hasTransient;
- (BOOL) transient;
- (AVIMDirectCommandBuilder*) setTransient:(BOOL) value;
- (AVIMDirectCommandBuilder*) clearTransient;

- (BOOL) hasDt;
- (NSString*) dt;
- (AVIMDirectCommandBuilder*) setDt:(NSString*) value;
- (AVIMDirectCommandBuilder*) clearDt;

- (BOOL) hasRoomId;
- (NSString*) roomId;
- (AVIMDirectCommandBuilder*) setRoomId:(NSString*) value;
- (AVIMDirectCommandBuilder*) clearRoomId;

- (BOOL) hasPushData;
- (NSString*) pushData;
- (AVIMDirectCommandBuilder*) setPushData:(NSString*) value;
- (AVIMDirectCommandBuilder*) clearPushData;

- (BOOL) hasWill;
- (BOOL) will;
- (AVIMDirectCommandBuilder*) setWill:(BOOL) value;
- (AVIMDirectCommandBuilder*) clearWill;

- (BOOL) hasPatchTimestamp;
- (SInt64) patchTimestamp;
- (AVIMDirectCommandBuilder*) setPatchTimestamp:(SInt64) value;
- (AVIMDirectCommandBuilder*) clearPatchTimestamp;

- (BOOL) hasBinaryMsg;
- (NSData*) binaryMsg;
- (AVIMDirectCommandBuilder*) setBinaryMsg:(NSData*) value;
- (AVIMDirectCommandBuilder*) clearBinaryMsg;
@end

#define AckCommand_code @"code"
#define AckCommand_reason @"reason"
#define AckCommand_mid @"mid"
#define AckCommand_cid @"cid"
#define AckCommand_t @"t"
#define AckCommand_uid @"uid"
#define AckCommand_fromts @"fromts"
#define AckCommand_tots @"tots"
#define AckCommand_type @"type"
#define AckCommand_ids @"ids"
#define AckCommand_appCode @"appCode"
@interface AVIMAckCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasT_:1;
  BOOL hasFromts_:1;
  BOOL hasTots_:1;
  BOOL hasCode_:1;
  BOOL hasAppCode_:1;
  BOOL hasReason_:1;
  BOOL hasMid_:1;
  BOOL hasCid_:1;
  BOOL hasUid_:1;
  BOOL hasType_:1;
  SInt64 t;
  SInt64 fromts;
  SInt64 tots;
  SInt32 code;
  SInt32 appCode;
  NSString* reason;
  NSString* mid;
  NSString* cid;
  NSString* uid;
  NSString* type;
  NSMutableArray * idsArray;
}
- (BOOL) hasCode;
- (BOOL) hasReason;
- (BOOL) hasMid;
- (BOOL) hasCid;
- (BOOL) hasT;
- (BOOL) hasUid;
- (BOOL) hasFromts;
- (BOOL) hasTots;
- (BOOL) hasType;
- (BOOL) hasAppCode;
@property (readonly) SInt32 code;
@property (readonly, strong) NSString* reason;
@property (readonly, strong) NSString* mid;
@property (readonly, strong) NSString* cid;
@property (readonly) SInt64 t;
@property (readonly, strong) NSString* uid;
@property (readonly) SInt64 fromts;
@property (readonly) SInt64 tots;
@property (readonly, strong) NSString* type;
@property (readonly, strong) NSArray * ids;
@property (readonly) SInt32 appCode;
- (NSString*)idsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMAckCommandBuilder*) builder;
+ (AVIMAckCommandBuilder*) builder;
+ (AVIMAckCommandBuilder*) builderWithPrototype:(AVIMAckCommand*) prototype;
- (AVIMAckCommandBuilder*) toBuilder;

+ (AVIMAckCommand*) parseFromData:(NSData*) data;
+ (AVIMAckCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMAckCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMAckCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMAckCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMAckCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMAckCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMAckCommand* resultAckCommand;
}

- (AVIMAckCommand*) defaultInstance;

- (AVIMAckCommandBuilder*) clear;
- (AVIMAckCommandBuilder*) clone;

- (AVIMAckCommand*) build;
- (AVIMAckCommand*) buildPartial;

- (AVIMAckCommandBuilder*) mergeFrom:(AVIMAckCommand*) other;
- (AVIMAckCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMAckCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCode;
- (SInt32) code;
- (AVIMAckCommandBuilder*) setCode:(SInt32) value;
- (AVIMAckCommandBuilder*) clearCode;

- (BOOL) hasReason;
- (NSString*) reason;
- (AVIMAckCommandBuilder*) setReason:(NSString*) value;
- (AVIMAckCommandBuilder*) clearReason;

- (BOOL) hasMid;
- (NSString*) mid;
- (AVIMAckCommandBuilder*) setMid:(NSString*) value;
- (AVIMAckCommandBuilder*) clearMid;

- (BOOL) hasCid;
- (NSString*) cid;
- (AVIMAckCommandBuilder*) setCid:(NSString*) value;
- (AVIMAckCommandBuilder*) clearCid;

- (BOOL) hasT;
- (SInt64) t;
- (AVIMAckCommandBuilder*) setT:(SInt64) value;
- (AVIMAckCommandBuilder*) clearT;

- (BOOL) hasUid;
- (NSString*) uid;
- (AVIMAckCommandBuilder*) setUid:(NSString*) value;
- (AVIMAckCommandBuilder*) clearUid;

- (BOOL) hasFromts;
- (SInt64) fromts;
- (AVIMAckCommandBuilder*) setFromts:(SInt64) value;
- (AVIMAckCommandBuilder*) clearFromts;

- (BOOL) hasTots;
- (SInt64) tots;
- (AVIMAckCommandBuilder*) setTots:(SInt64) value;
- (AVIMAckCommandBuilder*) clearTots;

- (BOOL) hasType;
- (NSString*) type;
- (AVIMAckCommandBuilder*) setType:(NSString*) value;
- (AVIMAckCommandBuilder*) clearType;

- (NSMutableArray *)ids;
- (NSString*)idsAtIndex:(NSUInteger)index;
- (AVIMAckCommandBuilder *)addIds:(NSString*)value;
- (AVIMAckCommandBuilder *)setIdsArray:(NSArray *)array;
- (AVIMAckCommandBuilder *)clearIds;

- (BOOL) hasAppCode;
- (SInt32) appCode;
- (AVIMAckCommandBuilder*) setAppCode:(SInt32) value;
- (AVIMAckCommandBuilder*) clearAppCode;
@end

#define UnreadCommand_convs @"convs"
#define UnreadCommand_notifTime @"notifTime"
@interface AVIMUnreadCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasNotifTime_:1;
  SInt64 notifTime;
  NSMutableArray * convsArray;
}
- (BOOL) hasNotifTime;
@property (readonly, strong) NSArray * convs;
@property (readonly) SInt64 notifTime;
- (AVIMUnreadTuple*)convsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMUnreadCommandBuilder*) builder;
+ (AVIMUnreadCommandBuilder*) builder;
+ (AVIMUnreadCommandBuilder*) builderWithPrototype:(AVIMUnreadCommand*) prototype;
- (AVIMUnreadCommandBuilder*) toBuilder;

+ (AVIMUnreadCommand*) parseFromData:(NSData*) data;
+ (AVIMUnreadCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMUnreadCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMUnreadCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMUnreadCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMUnreadCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMUnreadCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMUnreadCommand* resultUnreadCommand;
}

- (AVIMUnreadCommand*) defaultInstance;

- (AVIMUnreadCommandBuilder*) clear;
- (AVIMUnreadCommandBuilder*) clone;

- (AVIMUnreadCommand*) build;
- (AVIMUnreadCommand*) buildPartial;

- (AVIMUnreadCommandBuilder*) mergeFrom:(AVIMUnreadCommand*) other;
- (AVIMUnreadCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMUnreadCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)convs;
- (AVIMUnreadTuple*)convsAtIndex:(NSUInteger)index;
- (AVIMUnreadCommandBuilder *)addConvs:(AVIMUnreadTuple*)value;
- (AVIMUnreadCommandBuilder *)setConvsArray:(NSArray *)array;
- (AVIMUnreadCommandBuilder *)clearConvs;

- (BOOL) hasNotifTime;
- (SInt64) notifTime;
- (AVIMUnreadCommandBuilder*) setNotifTime:(SInt64) value;
- (AVIMUnreadCommandBuilder*) clearNotifTime;
@end

#define ConvCommand_m @"m"
#define ConvCommand_transient @"transient"
#define ConvCommand_unique @"unique"
#define ConvCommand_cid @"cid"
#define ConvCommand_cdate @"cdate"
#define ConvCommand_initBy @"initBy"
#define ConvCommand_sort @"sort"
#define ConvCommand_limit @"limit"
#define ConvCommand_skip @"skip"
#define ConvCommand_flag @"flag"
#define ConvCommand_count @"count"
#define ConvCommand_udate @"udate"
#define ConvCommand_t @"t"
#define ConvCommand_n @"n"
#define ConvCommand_s @"s"
#define ConvCommand_statusSub @"statusSub"
#define ConvCommand_statusPub @"statusPub"
#define ConvCommand_statusTtl @"statusTtl"
#define ConvCommand_uniqueId @"uniqueId"
#define ConvCommand_targetClientId @"targetClientId"
#define ConvCommand_maxReadTimestamp @"maxReadTimestamp"
#define ConvCommand_maxAckTimestamp @"maxAckTimestamp"
#define ConvCommand_queryAllMembers @"queryAllMembers"
#define ConvCommand_maxReadTuples @"maxReadTuples"
#define ConvCommand_cids @"cids"
#define ConvCommand_results @"results"
#define ConvCommand_where @"where"
#define ConvCommand_attr @"attr"
@interface AVIMConvCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTransient_:1;
  BOOL hasUnique_:1;
  BOOL hasStatusSub_:1;
  BOOL hasStatusPub_:1;
  BOOL hasQueryAllMembers_:1;
  BOOL hasT_:1;
  BOOL hasMaxReadTimestamp_:1;
  BOOL hasMaxAckTimestamp_:1;
  BOOL hasLimit_:1;
  BOOL hasSkip_:1;
  BOOL hasFlag_:1;
  BOOL hasCount_:1;
  BOOL hasStatusTtl_:1;
  BOOL hasCid_:1;
  BOOL hasCdate_:1;
  BOOL hasInitBy_:1;
  BOOL hasSort_:1;
  BOOL hasUdate_:1;
  BOOL hasN_:1;
  BOOL hasS_:1;
  BOOL hasUniqueId_:1;
  BOOL hasTargetClientId_:1;
  BOOL hasResults_:1;
  BOOL hasWhere_:1;
  BOOL hasAttr_:1;
  BOOL transient_:1;
  BOOL unique_:1;
  BOOL statusSub_:1;
  BOOL statusPub_:1;
  BOOL queryAllMembers_:1;
  SInt64 t;
  SInt64 maxReadTimestamp;
  SInt64 maxAckTimestamp;
  SInt32 limit;
  SInt32 skip;
  SInt32 flag;
  SInt32 count;
  SInt32 statusTtl;
  NSString* cid;
  NSString* cdate;
  NSString* initBy;
  NSString* sort;
  NSString* udate;
  NSString* n;
  NSString* s;
  NSString* uniqueId;
  NSString* targetClientId;
  AVIMJsonObjectMessage* results;
  AVIMJsonObjectMessage* where;
  AVIMJsonObjectMessage* attr;
  NSMutableArray * mArray;
  NSMutableArray * cidsArray;
  NSMutableArray * maxReadTuplesArray;
}
- (BOOL) hasTransient;
- (BOOL) hasUnique;
- (BOOL) hasCid;
- (BOOL) hasCdate;
- (BOOL) hasInitBy;
- (BOOL) hasSort;
- (BOOL) hasLimit;
- (BOOL) hasSkip;
- (BOOL) hasFlag;
- (BOOL) hasCount;
- (BOOL) hasUdate;
- (BOOL) hasT;
- (BOOL) hasN;
- (BOOL) hasS;
- (BOOL) hasStatusSub;
- (BOOL) hasStatusPub;
- (BOOL) hasStatusTtl;
- (BOOL) hasUniqueId;
- (BOOL) hasTargetClientId;
- (BOOL) hasMaxReadTimestamp;
- (BOOL) hasMaxAckTimestamp;
- (BOOL) hasQueryAllMembers;
- (BOOL) hasResults;
- (BOOL) hasWhere;
- (BOOL) hasAttr;
@property (readonly, strong) NSArray * m;
- (BOOL) transient;
- (BOOL) unique;
@property (readonly, strong) NSString* cid;
@property (readonly, strong) NSString* cdate;
@property (readonly, strong) NSString* pb_initBy;
@property (readonly, strong) NSString* sort;
@property (readonly) SInt32 limit;
@property (readonly) SInt32 skip;
@property (readonly) SInt32 flag;
@property (readonly) SInt32 count;
@property (readonly, strong) NSString* udate;
@property (readonly) SInt64 t;
@property (readonly, strong) NSString* n;
@property (readonly, strong) NSString* s;
- (BOOL) statusSub;
- (BOOL) statusPub;
@property (readonly) SInt32 statusTtl;
@property (readonly, strong) NSString* uniqueId;
@property (readonly, strong) NSString* targetClientId;
@property (readonly) SInt64 maxReadTimestamp;
@property (readonly) SInt64 maxAckTimestamp;
- (BOOL) queryAllMembers;
@property (readonly, strong) NSArray * maxReadTuples;
@property (readonly, strong) NSArray * cids;
@property (readonly, strong) AVIMJsonObjectMessage* results;
@property (readonly, strong) AVIMJsonObjectMessage* where;
@property (readonly, strong) AVIMJsonObjectMessage* attr;
- (NSString*)mAtIndex:(NSUInteger)index;
- (AVIMMaxReadTuple*)maxReadTuplesAtIndex:(NSUInteger)index;
- (NSString*)cidsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMConvCommandBuilder*) builder;
+ (AVIMConvCommandBuilder*) builder;
+ (AVIMConvCommandBuilder*) builderWithPrototype:(AVIMConvCommand*) prototype;
- (AVIMConvCommandBuilder*) toBuilder;

+ (AVIMConvCommand*) parseFromData:(NSData*) data;
+ (AVIMConvCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMConvCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMConvCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMConvCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMConvCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMConvCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMConvCommand* resultConvCommand;
}

- (AVIMConvCommand*) defaultInstance;

- (AVIMConvCommandBuilder*) clear;
- (AVIMConvCommandBuilder*) clone;

- (AVIMConvCommand*) build;
- (AVIMConvCommand*) buildPartial;

- (AVIMConvCommandBuilder*) mergeFrom:(AVIMConvCommand*) other;
- (AVIMConvCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMConvCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)m;
- (NSString*)mAtIndex:(NSUInteger)index;
- (AVIMConvCommandBuilder *)addM:(NSString*)value;
- (AVIMConvCommandBuilder *)setMArray:(NSArray *)array;
- (AVIMConvCommandBuilder *)clearM;

- (BOOL) hasTransient;
- (BOOL) transient;
- (AVIMConvCommandBuilder*) setTransient:(BOOL) value;
- (AVIMConvCommandBuilder*) clearTransient;

- (BOOL) hasUnique;
- (BOOL) unique;
- (AVIMConvCommandBuilder*) setUnique:(BOOL) value;
- (AVIMConvCommandBuilder*) clearUnique;

- (BOOL) hasCid;
- (NSString*) cid;
- (AVIMConvCommandBuilder*) setCid:(NSString*) value;
- (AVIMConvCommandBuilder*) clearCid;

- (BOOL) hasCdate;
- (NSString*) cdate;
- (AVIMConvCommandBuilder*) setCdate:(NSString*) value;
- (AVIMConvCommandBuilder*) clearCdate;

- (BOOL) hasInitBy;
- (NSString*) pb_initBy;
- (AVIMConvCommandBuilder*) setInitBy:(NSString*) value;
- (AVIMConvCommandBuilder*) clearInitBy;

- (BOOL) hasSort;
- (NSString*) sort;
- (AVIMConvCommandBuilder*) setSort:(NSString*) value;
- (AVIMConvCommandBuilder*) clearSort;

- (BOOL) hasLimit;
- (SInt32) limit;
- (AVIMConvCommandBuilder*) setLimit:(SInt32) value;
- (AVIMConvCommandBuilder*) clearLimit;

- (BOOL) hasSkip;
- (SInt32) skip;
- (AVIMConvCommandBuilder*) setSkip:(SInt32) value;
- (AVIMConvCommandBuilder*) clearSkip;

- (BOOL) hasFlag;
- (SInt32) flag;
- (AVIMConvCommandBuilder*) setFlag:(SInt32) value;
- (AVIMConvCommandBuilder*) clearFlag;

- (BOOL) hasCount;
- (SInt32) count;
- (AVIMConvCommandBuilder*) setCount:(SInt32) value;
- (AVIMConvCommandBuilder*) clearCount;

- (BOOL) hasUdate;
- (NSString*) udate;
- (AVIMConvCommandBuilder*) setUdate:(NSString*) value;
- (AVIMConvCommandBuilder*) clearUdate;

- (BOOL) hasT;
- (SInt64) t;
- (AVIMConvCommandBuilder*) setT:(SInt64) value;
- (AVIMConvCommandBuilder*) clearT;

- (BOOL) hasN;
- (NSString*) n;
- (AVIMConvCommandBuilder*) setN:(NSString*) value;
- (AVIMConvCommandBuilder*) clearN;

- (BOOL) hasS;
- (NSString*) s;
- (AVIMConvCommandBuilder*) setS:(NSString*) value;
- (AVIMConvCommandBuilder*) clearS;

- (BOOL) hasStatusSub;
- (BOOL) statusSub;
- (AVIMConvCommandBuilder*) setStatusSub:(BOOL) value;
- (AVIMConvCommandBuilder*) clearStatusSub;

- (BOOL) hasStatusPub;
- (BOOL) statusPub;
- (AVIMConvCommandBuilder*) setStatusPub:(BOOL) value;
- (AVIMConvCommandBuilder*) clearStatusPub;

- (BOOL) hasStatusTtl;
- (SInt32) statusTtl;
- (AVIMConvCommandBuilder*) setStatusTtl:(SInt32) value;
- (AVIMConvCommandBuilder*) clearStatusTtl;

- (BOOL) hasUniqueId;
- (NSString*) uniqueId;
- (AVIMConvCommandBuilder*) setUniqueId:(NSString*) value;
- (AVIMConvCommandBuilder*) clearUniqueId;

- (BOOL) hasTargetClientId;
- (NSString*) targetClientId;
- (AVIMConvCommandBuilder*) setTargetClientId:(NSString*) value;
- (AVIMConvCommandBuilder*) clearTargetClientId;

- (BOOL) hasMaxReadTimestamp;
- (SInt64) maxReadTimestamp;
- (AVIMConvCommandBuilder*) setMaxReadTimestamp:(SInt64) value;
- (AVIMConvCommandBuilder*) clearMaxReadTimestamp;

- (BOOL) hasMaxAckTimestamp;
- (SInt64) maxAckTimestamp;
- (AVIMConvCommandBuilder*) setMaxAckTimestamp:(SInt64) value;
- (AVIMConvCommandBuilder*) clearMaxAckTimestamp;

- (BOOL) hasQueryAllMembers;
- (BOOL) queryAllMembers;
- (AVIMConvCommandBuilder*) setQueryAllMembers:(BOOL) value;
- (AVIMConvCommandBuilder*) clearQueryAllMembers;

- (NSMutableArray *)maxReadTuples;
- (AVIMMaxReadTuple*)maxReadTuplesAtIndex:(NSUInteger)index;
- (AVIMConvCommandBuilder *)addMaxReadTuples:(AVIMMaxReadTuple*)value;
- (AVIMConvCommandBuilder *)setMaxReadTuplesArray:(NSArray *)array;
- (AVIMConvCommandBuilder *)clearMaxReadTuples;

- (NSMutableArray *)cids;
- (NSString*)cidsAtIndex:(NSUInteger)index;
- (AVIMConvCommandBuilder *)addCids:(NSString*)value;
- (AVIMConvCommandBuilder *)setCidsArray:(NSArray *)array;
- (AVIMConvCommandBuilder *)clearCids;

- (BOOL) hasResults;
- (AVIMJsonObjectMessage*) results;
- (AVIMConvCommandBuilder*) setResults:(AVIMJsonObjectMessage*) value;
- (AVIMConvCommandBuilder*) setResultsBuilder:(AVIMJsonObjectMessageBuilder*) builderForValue;
- (AVIMConvCommandBuilder*) mergeResults:(AVIMJsonObjectMessage*) value;
- (AVIMConvCommandBuilder*) clearResults;

- (BOOL) hasWhere;
- (AVIMJsonObjectMessage*) where;
- (AVIMConvCommandBuilder*) setWhere:(AVIMJsonObjectMessage*) value;
- (AVIMConvCommandBuilder*) setWhereBuilder:(AVIMJsonObjectMessageBuilder*) builderForValue;
- (AVIMConvCommandBuilder*) mergeWhere:(AVIMJsonObjectMessage*) value;
- (AVIMConvCommandBuilder*) clearWhere;

- (BOOL) hasAttr;
- (AVIMJsonObjectMessage*) attr;
- (AVIMConvCommandBuilder*) setAttr:(AVIMJsonObjectMessage*) value;
- (AVIMConvCommandBuilder*) setAttrBuilder:(AVIMJsonObjectMessageBuilder*) builderForValue;
- (AVIMConvCommandBuilder*) mergeAttr:(AVIMJsonObjectMessage*) value;
- (AVIMConvCommandBuilder*) clearAttr;
@end

#define RoomCommand_roomId @"roomId"
#define RoomCommand_s @"s"
#define RoomCommand_t @"t"
#define RoomCommand_n @"n"
#define RoomCommand_transient @"transient"
#define RoomCommand_roomPeerIds @"roomPeerIds"
#define RoomCommand_byPeerId @"byPeerId"
@interface AVIMRoomCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTransient_:1;
  BOOL hasT_:1;
  BOOL hasRoomId_:1;
  BOOL hasS_:1;
  BOOL hasN_:1;
  BOOL hasByPeerId_:1;
  BOOL transient_:1;
  SInt64 t;
  NSString* roomId;
  NSString* s;
  NSString* n;
  NSString* byPeerId;
  NSMutableArray * roomPeerIdsArray;
}
- (BOOL) hasRoomId;
- (BOOL) hasS;
- (BOOL) hasT;
- (BOOL) hasN;
- (BOOL) hasTransient;
- (BOOL) hasByPeerId;
@property (readonly, strong) NSString* roomId;
@property (readonly, strong) NSString* s;
@property (readonly) SInt64 t;
@property (readonly, strong) NSString* n;
- (BOOL) transient;
@property (readonly, strong) NSArray * roomPeerIds;
@property (readonly, strong) NSString* byPeerId;
- (NSString*)roomPeerIdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMRoomCommandBuilder*) builder;
+ (AVIMRoomCommandBuilder*) builder;
+ (AVIMRoomCommandBuilder*) builderWithPrototype:(AVIMRoomCommand*) prototype;
- (AVIMRoomCommandBuilder*) toBuilder;

+ (AVIMRoomCommand*) parseFromData:(NSData*) data;
+ (AVIMRoomCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMRoomCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMRoomCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMRoomCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMRoomCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMRoomCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMRoomCommand* resultRoomCommand;
}

- (AVIMRoomCommand*) defaultInstance;

- (AVIMRoomCommandBuilder*) clear;
- (AVIMRoomCommandBuilder*) clone;

- (AVIMRoomCommand*) build;
- (AVIMRoomCommand*) buildPartial;

- (AVIMRoomCommandBuilder*) mergeFrom:(AVIMRoomCommand*) other;
- (AVIMRoomCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMRoomCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasRoomId;
- (NSString*) roomId;
- (AVIMRoomCommandBuilder*) setRoomId:(NSString*) value;
- (AVIMRoomCommandBuilder*) clearRoomId;

- (BOOL) hasS;
- (NSString*) s;
- (AVIMRoomCommandBuilder*) setS:(NSString*) value;
- (AVIMRoomCommandBuilder*) clearS;

- (BOOL) hasT;
- (SInt64) t;
- (AVIMRoomCommandBuilder*) setT:(SInt64) value;
- (AVIMRoomCommandBuilder*) clearT;

- (BOOL) hasN;
- (NSString*) n;
- (AVIMRoomCommandBuilder*) setN:(NSString*) value;
- (AVIMRoomCommandBuilder*) clearN;

- (BOOL) hasTransient;
- (BOOL) transient;
- (AVIMRoomCommandBuilder*) setTransient:(BOOL) value;
- (AVIMRoomCommandBuilder*) clearTransient;

- (NSMutableArray *)roomPeerIds;
- (NSString*)roomPeerIdsAtIndex:(NSUInteger)index;
- (AVIMRoomCommandBuilder *)addRoomPeerIds:(NSString*)value;
- (AVIMRoomCommandBuilder *)setRoomPeerIdsArray:(NSArray *)array;
- (AVIMRoomCommandBuilder *)clearRoomPeerIds;

- (BOOL) hasByPeerId;
- (NSString*) byPeerId;
- (AVIMRoomCommandBuilder*) setByPeerId:(NSString*) value;
- (AVIMRoomCommandBuilder*) clearByPeerId;
@end

#define LogsCommand_cid @"cid"
#define LogsCommand_l @"l"
#define LogsCommand_limit @"limit"
#define LogsCommand_t @"t"
#define LogsCommand_tt @"tt"
#define LogsCommand_tmid @"tmid"
#define LogsCommand_mid @"mid"
#define LogsCommand_checksum @"checksum"
#define LogsCommand_stored @"stored"
#define LogsCommand_direction @"direction"
#define LogsCommand_tIncluded @"tIncluded"
#define LogsCommand_ttIncluded @"ttIncluded"
#define LogsCommand_logs @"logs"
@interface AVIMLogsCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasStored_:1;
  BOOL hasTIncluded_:1;
  BOOL hasTtIncluded_:1;
  BOOL hasT_:1;
  BOOL hasTt_:1;
  BOOL hasL_:1;
  BOOL hasLimit_:1;
  BOOL hasCid_:1;
  BOOL hasTmid_:1;
  BOOL hasMid_:1;
  BOOL hasChecksum_:1;
  BOOL hasDirection_:1;
  BOOL stored_:1;
  BOOL tIncluded_:1;
  BOOL ttIncluded_:1;
  SInt64 t;
  SInt64 tt;
  SInt32 l;
  SInt32 limit;
  NSString* cid;
  NSString* tmid;
  NSString* mid;
  NSString* checksum;
  AVIMLogsCommand_QueryDirection direction;
  NSMutableArray * logsArray;
}
- (BOOL) hasCid;
- (BOOL) hasL;
- (BOOL) hasLimit;
- (BOOL) hasT;
- (BOOL) hasTt;
- (BOOL) hasTmid;
- (BOOL) hasMid;
- (BOOL) hasChecksum;
- (BOOL) hasStored;
- (BOOL) hasDirection;
- (BOOL) hasTIncluded;
- (BOOL) hasTtIncluded;
@property (readonly, strong) NSString* cid;
@property (readonly) SInt32 l;
@property (readonly) SInt32 limit;
@property (readonly) SInt64 t;
@property (readonly) SInt64 tt;
@property (readonly, strong) NSString* tmid;
@property (readonly, strong) NSString* mid;
@property (readonly, strong) NSString* checksum;
- (BOOL) stored;
@property (readonly) AVIMLogsCommand_QueryDirection direction;
- (BOOL) tIncluded;
- (BOOL) ttIncluded;
@property (readonly, strong) NSArray * logs;
- (AVIMLogItem*)logsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMLogsCommandBuilder*) builder;
+ (AVIMLogsCommandBuilder*) builder;
+ (AVIMLogsCommandBuilder*) builderWithPrototype:(AVIMLogsCommand*) prototype;
- (AVIMLogsCommandBuilder*) toBuilder;

+ (AVIMLogsCommand*) parseFromData:(NSData*) data;
+ (AVIMLogsCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMLogsCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMLogsCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMLogsCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMLogsCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMLogsCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMLogsCommand* resultLogsCommand;
}

- (AVIMLogsCommand*) defaultInstance;

- (AVIMLogsCommandBuilder*) clear;
- (AVIMLogsCommandBuilder*) clone;

- (AVIMLogsCommand*) build;
- (AVIMLogsCommand*) buildPartial;

- (AVIMLogsCommandBuilder*) mergeFrom:(AVIMLogsCommand*) other;
- (AVIMLogsCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMLogsCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCid;
- (NSString*) cid;
- (AVIMLogsCommandBuilder*) setCid:(NSString*) value;
- (AVIMLogsCommandBuilder*) clearCid;

- (BOOL) hasL;
- (SInt32) l;
- (AVIMLogsCommandBuilder*) setL:(SInt32) value;
- (AVIMLogsCommandBuilder*) clearL;

- (BOOL) hasLimit;
- (SInt32) limit;
- (AVIMLogsCommandBuilder*) setLimit:(SInt32) value;
- (AVIMLogsCommandBuilder*) clearLimit;

- (BOOL) hasT;
- (SInt64) t;
- (AVIMLogsCommandBuilder*) setT:(SInt64) value;
- (AVIMLogsCommandBuilder*) clearT;

- (BOOL) hasTt;
- (SInt64) tt;
- (AVIMLogsCommandBuilder*) setTt:(SInt64) value;
- (AVIMLogsCommandBuilder*) clearTt;

- (BOOL) hasTmid;
- (NSString*) tmid;
- (AVIMLogsCommandBuilder*) setTmid:(NSString*) value;
- (AVIMLogsCommandBuilder*) clearTmid;

- (BOOL) hasMid;
- (NSString*) mid;
- (AVIMLogsCommandBuilder*) setMid:(NSString*) value;
- (AVIMLogsCommandBuilder*) clearMid;

- (BOOL) hasChecksum;
- (NSString*) checksum;
- (AVIMLogsCommandBuilder*) setChecksum:(NSString*) value;
- (AVIMLogsCommandBuilder*) clearChecksum;

- (BOOL) hasStored;
- (BOOL) stored;
- (AVIMLogsCommandBuilder*) setStored:(BOOL) value;
- (AVIMLogsCommandBuilder*) clearStored;

- (BOOL) hasDirection;
- (AVIMLogsCommand_QueryDirection) direction;
- (AVIMLogsCommandBuilder*) setDirection:(AVIMLogsCommand_QueryDirection) value;
- (AVIMLogsCommandBuilder*) clearDirection;

- (BOOL) hasTIncluded;
- (BOOL) tIncluded;
- (AVIMLogsCommandBuilder*) setTIncluded:(BOOL) value;
- (AVIMLogsCommandBuilder*) clearTIncluded;

- (BOOL) hasTtIncluded;
- (BOOL) ttIncluded;
- (AVIMLogsCommandBuilder*) setTtIncluded:(BOOL) value;
- (AVIMLogsCommandBuilder*) clearTtIncluded;

- (NSMutableArray *)logs;
- (AVIMLogItem*)logsAtIndex:(NSUInteger)index;
- (AVIMLogsCommandBuilder *)addLogs:(AVIMLogItem*)value;
- (AVIMLogsCommandBuilder *)setLogsArray:(NSArray *)array;
- (AVIMLogsCommandBuilder *)clearLogs;
@end

#define RcpCommand_id @"id"
#define RcpCommand_cid @"cid"
#define RcpCommand_t @"t"
#define RcpCommand_read @"read"
@interface AVIMRcpCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRead_:1;
  BOOL hasT_:1;
  BOOL hasId_:1;
  BOOL hasCid_:1;
  BOOL read_:1;
  SInt64 t;
  NSString* id;
  NSString* cid;
}
- (BOOL) hasId;
- (BOOL) hasCid;
- (BOOL) hasT;
- (BOOL) hasRead;
@property (readonly, strong) NSString* id;
@property (readonly, strong) NSString* cid;
@property (readonly) SInt64 t;
- (BOOL) read;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMRcpCommandBuilder*) builder;
+ (AVIMRcpCommandBuilder*) builder;
+ (AVIMRcpCommandBuilder*) builderWithPrototype:(AVIMRcpCommand*) prototype;
- (AVIMRcpCommandBuilder*) toBuilder;

+ (AVIMRcpCommand*) parseFromData:(NSData*) data;
+ (AVIMRcpCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMRcpCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMRcpCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMRcpCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMRcpCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMRcpCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMRcpCommand* resultRcpCommand;
}

- (AVIMRcpCommand*) defaultInstance;

- (AVIMRcpCommandBuilder*) clear;
- (AVIMRcpCommandBuilder*) clone;

- (AVIMRcpCommand*) build;
- (AVIMRcpCommand*) buildPartial;

- (AVIMRcpCommandBuilder*) mergeFrom:(AVIMRcpCommand*) other;
- (AVIMRcpCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMRcpCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasId;
- (NSString*) id;
- (AVIMRcpCommandBuilder*) setId:(NSString*) value;
- (AVIMRcpCommandBuilder*) clearId;

- (BOOL) hasCid;
- (NSString*) cid;
- (AVIMRcpCommandBuilder*) setCid:(NSString*) value;
- (AVIMRcpCommandBuilder*) clearCid;

- (BOOL) hasT;
- (SInt64) t;
- (AVIMRcpCommandBuilder*) setT:(SInt64) value;
- (AVIMRcpCommandBuilder*) clearT;

- (BOOL) hasRead;
- (BOOL) read;
- (AVIMRcpCommandBuilder*) setRead:(BOOL) value;
- (AVIMRcpCommandBuilder*) clearRead;
@end

#define ReadTuple_cid @"cid"
#define ReadTuple_timestamp @"timestamp"
#define ReadTuple_mid @"mid"
@interface AVIMReadTuple : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasTimestamp_:1;
  BOOL hasCid_:1;
  BOOL hasMid_:1;
  SInt64 timestamp;
  NSString* cid;
  NSString* mid;
}
- (BOOL) hasCid;
- (BOOL) hasTimestamp;
- (BOOL) hasMid;
@property (readonly, strong) NSString* cid;
@property (readonly) SInt64 timestamp;
@property (readonly, strong) NSString* mid;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMReadTupleBuilder*) builder;
+ (AVIMReadTupleBuilder*) builder;
+ (AVIMReadTupleBuilder*) builderWithPrototype:(AVIMReadTuple*) prototype;
- (AVIMReadTupleBuilder*) toBuilder;

+ (AVIMReadTuple*) parseFromData:(NSData*) data;
+ (AVIMReadTuple*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMReadTuple*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMReadTuple*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMReadTuple*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMReadTuple*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMReadTupleBuilder : PBGeneratedMessageBuilder {
@private
  AVIMReadTuple* resultReadTuple;
}

- (AVIMReadTuple*) defaultInstance;

- (AVIMReadTupleBuilder*) clear;
- (AVIMReadTupleBuilder*) clone;

- (AVIMReadTuple*) build;
- (AVIMReadTuple*) buildPartial;

- (AVIMReadTupleBuilder*) mergeFrom:(AVIMReadTuple*) other;
- (AVIMReadTupleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMReadTupleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCid;
- (NSString*) cid;
- (AVIMReadTupleBuilder*) setCid:(NSString*) value;
- (AVIMReadTupleBuilder*) clearCid;

- (BOOL) hasTimestamp;
- (SInt64) timestamp;
- (AVIMReadTupleBuilder*) setTimestamp:(SInt64) value;
- (AVIMReadTupleBuilder*) clearTimestamp;

- (BOOL) hasMid;
- (NSString*) mid;
- (AVIMReadTupleBuilder*) setMid:(NSString*) value;
- (AVIMReadTupleBuilder*) clearMid;
@end

#define MaxReadTuple_pid @"pid"
#define MaxReadTuple_maxAckTimestamp @"maxAckTimestamp"
#define MaxReadTuple_maxReadTimestamp @"maxReadTimestamp"
@interface AVIMMaxReadTuple : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasMaxAckTimestamp_:1;
  BOOL hasMaxReadTimestamp_:1;
  BOOL hasPid_:1;
  SInt64 maxAckTimestamp;
  SInt64 maxReadTimestamp;
  NSString* pid;
}
- (BOOL) hasPid;
- (BOOL) hasMaxAckTimestamp;
- (BOOL) hasMaxReadTimestamp;
@property (readonly, strong) NSString* pid;
@property (readonly) SInt64 maxAckTimestamp;
@property (readonly) SInt64 maxReadTimestamp;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMMaxReadTupleBuilder*) builder;
+ (AVIMMaxReadTupleBuilder*) builder;
+ (AVIMMaxReadTupleBuilder*) builderWithPrototype:(AVIMMaxReadTuple*) prototype;
- (AVIMMaxReadTupleBuilder*) toBuilder;

+ (AVIMMaxReadTuple*) parseFromData:(NSData*) data;
+ (AVIMMaxReadTuple*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMMaxReadTuple*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMMaxReadTuple*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMMaxReadTuple*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMMaxReadTuple*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMMaxReadTupleBuilder : PBGeneratedMessageBuilder {
@private
  AVIMMaxReadTuple* resultMaxReadTuple;
}

- (AVIMMaxReadTuple*) defaultInstance;

- (AVIMMaxReadTupleBuilder*) clear;
- (AVIMMaxReadTupleBuilder*) clone;

- (AVIMMaxReadTuple*) build;
- (AVIMMaxReadTuple*) buildPartial;

- (AVIMMaxReadTupleBuilder*) mergeFrom:(AVIMMaxReadTuple*) other;
- (AVIMMaxReadTupleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMMaxReadTupleBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasPid;
- (NSString*) pid;
- (AVIMMaxReadTupleBuilder*) setPid:(NSString*) value;
- (AVIMMaxReadTupleBuilder*) clearPid;

- (BOOL) hasMaxAckTimestamp;
- (SInt64) maxAckTimestamp;
- (AVIMMaxReadTupleBuilder*) setMaxAckTimestamp:(SInt64) value;
- (AVIMMaxReadTupleBuilder*) clearMaxAckTimestamp;

- (BOOL) hasMaxReadTimestamp;
- (SInt64) maxReadTimestamp;
- (AVIMMaxReadTupleBuilder*) setMaxReadTimestamp:(SInt64) value;
- (AVIMMaxReadTupleBuilder*) clearMaxReadTimestamp;
@end

#define ReadCommand_cid @"cid"
#define ReadCommand_cids @"cids"
#define ReadCommand_convs @"convs"
@interface AVIMReadCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCid_:1;
  NSString* cid;
  NSMutableArray * cidsArray;
  NSMutableArray * convsArray;
}
- (BOOL) hasCid;
@property (readonly, strong) NSString* cid;
@property (readonly, strong) NSArray * cids;
@property (readonly, strong) NSArray * convs;
- (NSString*)cidsAtIndex:(NSUInteger)index;
- (AVIMReadTuple*)convsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMReadCommandBuilder*) builder;
+ (AVIMReadCommandBuilder*) builder;
+ (AVIMReadCommandBuilder*) builderWithPrototype:(AVIMReadCommand*) prototype;
- (AVIMReadCommandBuilder*) toBuilder;

+ (AVIMReadCommand*) parseFromData:(NSData*) data;
+ (AVIMReadCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMReadCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMReadCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMReadCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMReadCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMReadCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMReadCommand* resultReadCommand;
}

- (AVIMReadCommand*) defaultInstance;

- (AVIMReadCommandBuilder*) clear;
- (AVIMReadCommandBuilder*) clone;

- (AVIMReadCommand*) build;
- (AVIMReadCommand*) buildPartial;

- (AVIMReadCommandBuilder*) mergeFrom:(AVIMReadCommand*) other;
- (AVIMReadCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMReadCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCid;
- (NSString*) cid;
- (AVIMReadCommandBuilder*) setCid:(NSString*) value;
- (AVIMReadCommandBuilder*) clearCid;

- (NSMutableArray *)cids;
- (NSString*)cidsAtIndex:(NSUInteger)index;
- (AVIMReadCommandBuilder *)addCids:(NSString*)value;
- (AVIMReadCommandBuilder *)setCidsArray:(NSArray *)array;
- (AVIMReadCommandBuilder *)clearCids;

- (NSMutableArray *)convs;
- (AVIMReadTuple*)convsAtIndex:(NSUInteger)index;
- (AVIMReadCommandBuilder *)addConvs:(AVIMReadTuple*)value;
- (AVIMReadCommandBuilder *)setConvsArray:(NSArray *)array;
- (AVIMReadCommandBuilder *)clearConvs;
@end

#define PresenceCommand_status @"status"
#define PresenceCommand_sessionPeerIds @"sessionPeerIds"
#define PresenceCommand_cid @"cid"
@interface AVIMPresenceCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasCid_:1;
  BOOL hasStatus_:1;
  NSString* cid;
  AVIMStatusType status;
  NSMutableArray * sessionPeerIdsArray;
}
- (BOOL) hasStatus;
- (BOOL) hasCid;
@property (readonly) AVIMStatusType status;
@property (readonly, strong) NSArray * sessionPeerIds;
@property (readonly, strong) NSString* cid;
- (NSString*)sessionPeerIdsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMPresenceCommandBuilder*) builder;
+ (AVIMPresenceCommandBuilder*) builder;
+ (AVIMPresenceCommandBuilder*) builderWithPrototype:(AVIMPresenceCommand*) prototype;
- (AVIMPresenceCommandBuilder*) toBuilder;

+ (AVIMPresenceCommand*) parseFromData:(NSData*) data;
+ (AVIMPresenceCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMPresenceCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMPresenceCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMPresenceCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMPresenceCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMPresenceCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMPresenceCommand* resultPresenceCommand;
}

- (AVIMPresenceCommand*) defaultInstance;

- (AVIMPresenceCommandBuilder*) clear;
- (AVIMPresenceCommandBuilder*) clone;

- (AVIMPresenceCommand*) build;
- (AVIMPresenceCommand*) buildPartial;

- (AVIMPresenceCommandBuilder*) mergeFrom:(AVIMPresenceCommand*) other;
- (AVIMPresenceCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMPresenceCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasStatus;
- (AVIMStatusType) status;
- (AVIMPresenceCommandBuilder*) setStatus:(AVIMStatusType) value;
- (AVIMPresenceCommandBuilder*) clearStatus;

- (NSMutableArray *)sessionPeerIds;
- (NSString*)sessionPeerIdsAtIndex:(NSUInteger)index;
- (AVIMPresenceCommandBuilder *)addSessionPeerIds:(NSString*)value;
- (AVIMPresenceCommandBuilder *)setSessionPeerIdsArray:(NSArray *)array;
- (AVIMPresenceCommandBuilder *)clearSessionPeerIds;

- (BOOL) hasCid;
- (NSString*) cid;
- (AVIMPresenceCommandBuilder*) setCid:(NSString*) value;
- (AVIMPresenceCommandBuilder*) clearCid;
@end

#define ReportCommand_initiative @"initiative"
#define ReportCommand_type @"type"
#define ReportCommand_data @"data"
@interface AVIMReportCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasInitiative_:1;
  BOOL hasType_:1;
  BOOL hasData_:1;
  BOOL initiative_:1;
  NSString* type;
  NSString* data;
}
- (BOOL) hasInitiative;
- (BOOL) hasType;
- (BOOL) hasData;
- (BOOL) initiative;
@property (readonly, strong) NSString* type;
@property (readonly, strong) NSString* data;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMReportCommandBuilder*) builder;
+ (AVIMReportCommandBuilder*) builder;
+ (AVIMReportCommandBuilder*) builderWithPrototype:(AVIMReportCommand*) prototype;
- (AVIMReportCommandBuilder*) toBuilder;

+ (AVIMReportCommand*) parseFromData:(NSData*) data;
+ (AVIMReportCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMReportCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMReportCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMReportCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMReportCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMReportCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMReportCommand* resultReportCommand;
}

- (AVIMReportCommand*) defaultInstance;

- (AVIMReportCommandBuilder*) clear;
- (AVIMReportCommandBuilder*) clone;

- (AVIMReportCommand*) build;
- (AVIMReportCommand*) buildPartial;

- (AVIMReportCommandBuilder*) mergeFrom:(AVIMReportCommand*) other;
- (AVIMReportCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMReportCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasInitiative;
- (BOOL) initiative;
- (AVIMReportCommandBuilder*) setInitiative:(BOOL) value;
- (AVIMReportCommandBuilder*) clearInitiative;

- (BOOL) hasType;
- (NSString*) type;
- (AVIMReportCommandBuilder*) setType:(NSString*) value;
- (AVIMReportCommandBuilder*) clearType;

- (BOOL) hasData;
- (NSString*) data;
- (AVIMReportCommandBuilder*) setData:(NSString*) value;
- (AVIMReportCommandBuilder*) clearData;
@end

#define PatchItem_cid @"cid"
#define PatchItem_mid @"mid"
#define PatchItem_timestamp @"timestamp"
#define PatchItem_recall @"recall"
#define PatchItem_data @"data"
#define PatchItem_patchTimestamp @"patchTimestamp"
#define PatchItem_from @"pb_from"
@interface AVIMPatchItem : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasRecall_:1;
  BOOL hasTimestamp_:1;
  BOOL hasPatchTimestamp_:1;
  BOOL hasCid_:1;
  BOOL hasMid_:1;
  BOOL hasData_:1;
  BOOL hasFrom_:1;
  BOOL recall_:1;
  SInt64 timestamp;
  SInt64 patchTimestamp;
  NSString* cid;
  NSString* mid;
  NSString* data;
  NSString* pb_from;
}
- (BOOL) hasCid;
- (BOOL) hasMid;
- (BOOL) hasTimestamp;
- (BOOL) hasRecall;
- (BOOL) hasData;
- (BOOL) hasPatchTimestamp;
- (BOOL) hasFrom;
@property (readonly, strong) NSString* cid;
@property (readonly, strong) NSString* mid;
@property (readonly) SInt64 timestamp;
- (BOOL) recall;
@property (readonly, strong) NSString* data;
@property (readonly) SInt64 patchTimestamp;
@property (readonly, strong) NSString* pb_from;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMPatchItemBuilder*) builder;
+ (AVIMPatchItemBuilder*) builder;
+ (AVIMPatchItemBuilder*) builderWithPrototype:(AVIMPatchItem*) prototype;
- (AVIMPatchItemBuilder*) toBuilder;

+ (AVIMPatchItem*) parseFromData:(NSData*) data;
+ (AVIMPatchItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMPatchItem*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMPatchItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMPatchItem*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMPatchItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMPatchItemBuilder : PBGeneratedMessageBuilder {
@private
  AVIMPatchItem* resultPatchItem;
}

- (AVIMPatchItem*) defaultInstance;

- (AVIMPatchItemBuilder*) clear;
- (AVIMPatchItemBuilder*) clone;

- (AVIMPatchItem*) build;
- (AVIMPatchItem*) buildPartial;

- (AVIMPatchItemBuilder*) mergeFrom:(AVIMPatchItem*) other;
- (AVIMPatchItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMPatchItemBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCid;
- (NSString*) cid;
- (AVIMPatchItemBuilder*) setCid:(NSString*) value;
- (AVIMPatchItemBuilder*) clearCid;

- (BOOL) hasMid;
- (NSString*) mid;
- (AVIMPatchItemBuilder*) setMid:(NSString*) value;
- (AVIMPatchItemBuilder*) clearMid;

- (BOOL) hasTimestamp;
- (SInt64) timestamp;
- (AVIMPatchItemBuilder*) setTimestamp:(SInt64) value;
- (AVIMPatchItemBuilder*) clearTimestamp;

- (BOOL) hasRecall;
- (BOOL) recall;
- (AVIMPatchItemBuilder*) setRecall:(BOOL) value;
- (AVIMPatchItemBuilder*) clearRecall;

- (BOOL) hasData;
- (NSString*) data;
- (AVIMPatchItemBuilder*) setData:(NSString*) value;
- (AVIMPatchItemBuilder*) clearData;

- (BOOL) hasPatchTimestamp;
- (SInt64) patchTimestamp;
- (AVIMPatchItemBuilder*) setPatchTimestamp:(SInt64) value;
- (AVIMPatchItemBuilder*) clearPatchTimestamp;

- (BOOL) hasFrom;
- (NSString*) pb_from;
- (AVIMPatchItemBuilder*) setFrom:(NSString*) value;
- (AVIMPatchItemBuilder*) clearFrom;
@end

#define PatchCommand_patches @"patches"
#define PatchCommand_lastPatchTime @"lastPatchTime"
@interface AVIMPatchCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLastPatchTime_:1;
  SInt64 lastPatchTime;
  NSMutableArray * patchesArray;
}
- (BOOL) hasLastPatchTime;
@property (readonly, strong) NSArray * patches;
@property (readonly) SInt64 lastPatchTime;
- (AVIMPatchItem*)patchesAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMPatchCommandBuilder*) builder;
+ (AVIMPatchCommandBuilder*) builder;
+ (AVIMPatchCommandBuilder*) builderWithPrototype:(AVIMPatchCommand*) prototype;
- (AVIMPatchCommandBuilder*) toBuilder;

+ (AVIMPatchCommand*) parseFromData:(NSData*) data;
+ (AVIMPatchCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMPatchCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMPatchCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMPatchCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMPatchCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMPatchCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMPatchCommand* resultPatchCommand;
}

- (AVIMPatchCommand*) defaultInstance;

- (AVIMPatchCommandBuilder*) clear;
- (AVIMPatchCommandBuilder*) clone;

- (AVIMPatchCommand*) build;
- (AVIMPatchCommand*) buildPartial;

- (AVIMPatchCommandBuilder*) mergeFrom:(AVIMPatchCommand*) other;
- (AVIMPatchCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMPatchCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)patches;
- (AVIMPatchItem*)patchesAtIndex:(NSUInteger)index;
- (AVIMPatchCommandBuilder *)addPatches:(AVIMPatchItem*)value;
- (AVIMPatchCommandBuilder *)setPatchesArray:(NSArray *)array;
- (AVIMPatchCommandBuilder *)clearPatches;

- (BOOL) hasLastPatchTime;
- (SInt64) lastPatchTime;
- (AVIMPatchCommandBuilder*) setLastPatchTime:(SInt64) value;
- (AVIMPatchCommandBuilder*) clearLastPatchTime;
@end

#define GenericCommand_cmd @"cmd"
#define GenericCommand_op @"op"
#define GenericCommand_appId @"appId"
#define GenericCommand_peerId @"peerId"
#define GenericCommand_i @"i"
#define GenericCommand_installationId @"installationId"
#define GenericCommand_priority @"priority"
#define GenericCommand_service @"service"
#define GenericCommand_dataMessage @"dataMessage"
#define GenericCommand_sessionMessage @"sessionMessage"
#define GenericCommand_errorMessage @"errorMessage"
#define GenericCommand_directMessage @"directMessage"
#define GenericCommand_ackMessage @"ackMessage"
#define GenericCommand_unreadMessage @"unreadMessage"
#define GenericCommand_readMessage @"readMessage"
#define GenericCommand_rcpMessage @"rcpMessage"
#define GenericCommand_logsMessage @"logsMessage"
#define GenericCommand_convMessage @"convMessage"
#define GenericCommand_roomMessage @"roomMessage"
#define GenericCommand_presenceMessage @"presenceMessage"
#define GenericCommand_reportMessage @"reportMessage"
#define GenericCommand_patchMessage @"patchMessage"
@interface AVIMGenericCommand : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasI_:1;
  BOOL hasPriority_:1;
  BOOL hasService_:1;
  BOOL hasAppId_:1;
  BOOL hasPeerId_:1;
  BOOL hasInstallationId_:1;
  BOOL hasDataMessage_:1;
  BOOL hasSessionMessage_:1;
  BOOL hasErrorMessage_:1;
  BOOL hasDirectMessage_:1;
  BOOL hasAckMessage_:1;
  BOOL hasUnreadMessage_:1;
  BOOL hasReadMessage_:1;
  BOOL hasRcpMessage_:1;
  BOOL hasLogsMessage_:1;
  BOOL hasConvMessage_:1;
  BOOL hasRoomMessage_:1;
  BOOL hasPresenceMessage_:1;
  BOOL hasReportMessage_:1;
  BOOL hasPatchMessage_:1;
  BOOL hasCmd_:1;
  BOOL hasOp_:1;
  SInt32 i;
  SInt32 priority;
  SInt32 service;
  NSString* appId;
  NSString* peerId;
  NSString* installationId;
  AVIMDataCommand* dataMessage;
  AVIMSessionCommand* sessionMessage;
  AVIMErrorCommand* errorMessage;
  AVIMDirectCommand* directMessage;
  AVIMAckCommand* ackMessage;
  AVIMUnreadCommand* unreadMessage;
  AVIMReadCommand* readMessage;
  AVIMRcpCommand* rcpMessage;
  AVIMLogsCommand* logsMessage;
  AVIMConvCommand* convMessage;
  AVIMRoomCommand* roomMessage;
  AVIMPresenceCommand* presenceMessage;
  AVIMReportCommand* reportMessage;
  AVIMPatchCommand* patchMessage;
  AVIMCommandType cmd;
  AVIMOpType op;
}
- (BOOL) hasCmd;
- (BOOL) hasOp;
- (BOOL) hasAppId;
- (BOOL) hasPeerId;
- (BOOL) hasI;
- (BOOL) hasInstallationId;
- (BOOL) hasPriority;
- (BOOL) hasService;
- (BOOL) hasDataMessage;
- (BOOL) hasSessionMessage;
- (BOOL) hasErrorMessage;
- (BOOL) hasDirectMessage;
- (BOOL) hasAckMessage;
- (BOOL) hasUnreadMessage;
- (BOOL) hasReadMessage;
- (BOOL) hasRcpMessage;
- (BOOL) hasLogsMessage;
- (BOOL) hasConvMessage;
- (BOOL) hasRoomMessage;
- (BOOL) hasPresenceMessage;
- (BOOL) hasReportMessage;
- (BOOL) hasPatchMessage;
@property (readonly) AVIMCommandType cmd;
@property (readonly) AVIMOpType op;
@property (readonly, strong) NSString* appId;
@property (readonly, strong) NSString* peerId;
@property (readonly) SInt32 i;
@property (readonly, strong) NSString* installationId;
@property (readonly) SInt32 priority;
@property (readonly) SInt32 service;
@property (readonly, strong) AVIMDataCommand* dataMessage;
@property (readonly, strong) AVIMSessionCommand* sessionMessage;
@property (readonly, strong) AVIMErrorCommand* errorMessage;
@property (readonly, strong) AVIMDirectCommand* directMessage;
@property (readonly, strong) AVIMAckCommand* ackMessage;
@property (readonly, strong) AVIMUnreadCommand* unreadMessage;
@property (readonly, strong) AVIMReadCommand* readMessage;
@property (readonly, strong) AVIMRcpCommand* rcpMessage;
@property (readonly, strong) AVIMLogsCommand* logsMessage;
@property (readonly, strong) AVIMConvCommand* convMessage;
@property (readonly, strong) AVIMRoomCommand* roomMessage;
@property (readonly, strong) AVIMPresenceCommand* presenceMessage;
@property (readonly, strong) AVIMReportCommand* reportMessage;
@property (readonly, strong) AVIMPatchCommand* patchMessage;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (AVIMGenericCommandBuilder*) builder;
+ (AVIMGenericCommandBuilder*) builder;
+ (AVIMGenericCommandBuilder*) builderWithPrototype:(AVIMGenericCommand*) prototype;
- (AVIMGenericCommandBuilder*) toBuilder;

+ (AVIMGenericCommand*) parseFromData:(NSData*) data;
+ (AVIMGenericCommand*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMGenericCommand*) parseFromInputStream:(NSInputStream*) input;
+ (AVIMGenericCommand*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (AVIMGenericCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (AVIMGenericCommand*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface AVIMGenericCommandBuilder : PBGeneratedMessageBuilder {
@private
  AVIMGenericCommand* resultGenericCommand;
}

- (AVIMGenericCommand*) defaultInstance;

- (AVIMGenericCommandBuilder*) clear;
- (AVIMGenericCommandBuilder*) clone;

- (AVIMGenericCommand*) build;
- (AVIMGenericCommand*) buildPartial;

- (AVIMGenericCommandBuilder*) mergeFrom:(AVIMGenericCommand*) other;
- (AVIMGenericCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (AVIMGenericCommandBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasCmd;
- (AVIMCommandType) cmd;
- (AVIMGenericCommandBuilder*) setCmd:(AVIMCommandType) value;
- (AVIMGenericCommandBuilder*) clearCmd;

- (BOOL) hasOp;
- (AVIMOpType) op;
- (AVIMGenericCommandBuilder*) setOp:(AVIMOpType) value;
- (AVIMGenericCommandBuilder*) clearOp;

- (BOOL) hasAppId;
- (NSString*) appId;
- (AVIMGenericCommandBuilder*) setAppId:(NSString*) value;
- (AVIMGenericCommandBuilder*) clearAppId;

- (BOOL) hasPeerId;
- (NSString*) peerId;
- (AVIMGenericCommandBuilder*) setPeerId:(NSString*) value;
- (AVIMGenericCommandBuilder*) clearPeerId;

- (BOOL) hasI;
- (SInt32) i;
- (AVIMGenericCommandBuilder*) setI:(SInt32) value;
- (AVIMGenericCommandBuilder*) clearI;

- (BOOL) hasInstallationId;
- (NSString*) installationId;
- (AVIMGenericCommandBuilder*) setInstallationId:(NSString*) value;
- (AVIMGenericCommandBuilder*) clearInstallationId;

- (BOOL) hasPriority;
- (SInt32) priority;
- (AVIMGenericCommandBuilder*) setPriority:(SInt32) value;
- (AVIMGenericCommandBuilder*) clearPriority;

- (BOOL) hasService;
- (SInt32) service;
- (AVIMGenericCommandBuilder*) setService:(SInt32) value;
- (AVIMGenericCommandBuilder*) clearService;

- (BOOL) hasDataMessage;
- (AVIMDataCommand*) dataMessage;
- (AVIMGenericCommandBuilder*) setDataMessage:(AVIMDataCommand*) value;
- (AVIMGenericCommandBuilder*) setDataMessageBuilder:(AVIMDataCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeDataMessage:(AVIMDataCommand*) value;
- (AVIMGenericCommandBuilder*) clearDataMessage;

- (BOOL) hasSessionMessage;
- (AVIMSessionCommand*) sessionMessage;
- (AVIMGenericCommandBuilder*) setSessionMessage:(AVIMSessionCommand*) value;
- (AVIMGenericCommandBuilder*) setSessionMessageBuilder:(AVIMSessionCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeSessionMessage:(AVIMSessionCommand*) value;
- (AVIMGenericCommandBuilder*) clearSessionMessage;

- (BOOL) hasErrorMessage;
- (AVIMErrorCommand*) errorMessage;
- (AVIMGenericCommandBuilder*) setErrorMessage:(AVIMErrorCommand*) value;
- (AVIMGenericCommandBuilder*) setErrorMessageBuilder:(AVIMErrorCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeErrorMessage:(AVIMErrorCommand*) value;
- (AVIMGenericCommandBuilder*) clearErrorMessage;

- (BOOL) hasDirectMessage;
- (AVIMDirectCommand*) directMessage;
- (AVIMGenericCommandBuilder*) setDirectMessage:(AVIMDirectCommand*) value;
- (AVIMGenericCommandBuilder*) setDirectMessageBuilder:(AVIMDirectCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeDirectMessage:(AVIMDirectCommand*) value;
- (AVIMGenericCommandBuilder*) clearDirectMessage;

- (BOOL) hasAckMessage;
- (AVIMAckCommand*) ackMessage;
- (AVIMGenericCommandBuilder*) setAckMessage:(AVIMAckCommand*) value;
- (AVIMGenericCommandBuilder*) setAckMessageBuilder:(AVIMAckCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeAckMessage:(AVIMAckCommand*) value;
- (AVIMGenericCommandBuilder*) clearAckMessage;

- (BOOL) hasUnreadMessage;
- (AVIMUnreadCommand*) unreadMessage;
- (AVIMGenericCommandBuilder*) setUnreadMessage:(AVIMUnreadCommand*) value;
- (AVIMGenericCommandBuilder*) setUnreadMessageBuilder:(AVIMUnreadCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeUnreadMessage:(AVIMUnreadCommand*) value;
- (AVIMGenericCommandBuilder*) clearUnreadMessage;

- (BOOL) hasReadMessage;
- (AVIMReadCommand*) readMessage;
- (AVIMGenericCommandBuilder*) setReadMessage:(AVIMReadCommand*) value;
- (AVIMGenericCommandBuilder*) setReadMessageBuilder:(AVIMReadCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeReadMessage:(AVIMReadCommand*) value;
- (AVIMGenericCommandBuilder*) clearReadMessage;

- (BOOL) hasRcpMessage;
- (AVIMRcpCommand*) rcpMessage;
- (AVIMGenericCommandBuilder*) setRcpMessage:(AVIMRcpCommand*) value;
- (AVIMGenericCommandBuilder*) setRcpMessageBuilder:(AVIMRcpCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeRcpMessage:(AVIMRcpCommand*) value;
- (AVIMGenericCommandBuilder*) clearRcpMessage;

- (BOOL) hasLogsMessage;
- (AVIMLogsCommand*) logsMessage;
- (AVIMGenericCommandBuilder*) setLogsMessage:(AVIMLogsCommand*) value;
- (AVIMGenericCommandBuilder*) setLogsMessageBuilder:(AVIMLogsCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeLogsMessage:(AVIMLogsCommand*) value;
- (AVIMGenericCommandBuilder*) clearLogsMessage;

- (BOOL) hasConvMessage;
- (AVIMConvCommand*) convMessage;
- (AVIMGenericCommandBuilder*) setConvMessage:(AVIMConvCommand*) value;
- (AVIMGenericCommandBuilder*) setConvMessageBuilder:(AVIMConvCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeConvMessage:(AVIMConvCommand*) value;
- (AVIMGenericCommandBuilder*) clearConvMessage;

- (BOOL) hasRoomMessage;
- (AVIMRoomCommand*) roomMessage;
- (AVIMGenericCommandBuilder*) setRoomMessage:(AVIMRoomCommand*) value;
- (AVIMGenericCommandBuilder*) setRoomMessageBuilder:(AVIMRoomCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeRoomMessage:(AVIMRoomCommand*) value;
- (AVIMGenericCommandBuilder*) clearRoomMessage;

- (BOOL) hasPresenceMessage;
- (AVIMPresenceCommand*) presenceMessage;
- (AVIMGenericCommandBuilder*) setPresenceMessage:(AVIMPresenceCommand*) value;
- (AVIMGenericCommandBuilder*) setPresenceMessageBuilder:(AVIMPresenceCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergePresenceMessage:(AVIMPresenceCommand*) value;
- (AVIMGenericCommandBuilder*) clearPresenceMessage;

- (BOOL) hasReportMessage;
- (AVIMReportCommand*) reportMessage;
- (AVIMGenericCommandBuilder*) setReportMessage:(AVIMReportCommand*) value;
- (AVIMGenericCommandBuilder*) setReportMessageBuilder:(AVIMReportCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergeReportMessage:(AVIMReportCommand*) value;
- (AVIMGenericCommandBuilder*) clearReportMessage;

- (BOOL) hasPatchMessage;
- (AVIMPatchCommand*) patchMessage;
- (AVIMGenericCommandBuilder*) setPatchMessage:(AVIMPatchCommand*) value;
- (AVIMGenericCommandBuilder*) setPatchMessageBuilder:(AVIMPatchCommandBuilder*) builderForValue;
- (AVIMGenericCommandBuilder*) mergePatchMessage:(AVIMPatchCommand*) value;
- (AVIMGenericCommandBuilder*) clearPatchMessage;
@end


// @@protoc_insertion_point(global_scope)
